{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/valores-limites/valores-limites.component.ts","./src/app/components/valores-limites/valores-limites.component.html","./src/app/shared/data/prestamosPersonas.ts","./src/app/components/particion-equivalente/particion-equivalente.component.html","./src/app/components/particion-equivalente/particion-equivalente.component.ts","./src/app/components/tabla-decision/tabla-decision.component.ts","./src/app/components/tabla-decision/tabla-decision.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/constantes/constantes.ts","./src/app/app.module.ts","./src/app/components/transicion-estados/transicion-estados.component.ts","./src/app/components/transicion-estados/transicion-estados.component.html","./src/app/components/casos-uso/casos-uso.component.ts","./src/app/components/casos-uso/casos-uso.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport * as constantes from 'src/app/shared/constantes/constantes'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router ) { }\n\n  ngOnInit(): void {\n  }\n\n  redirigirTecnica(tecnica: string){\n    var ruta = constantes.rutas_tecnicas_acr.find(x => x.acr == tecnica);\n    if(ruta)\n      this.router.navigate([ruta.ruta]);\n  }\n}\n","\n<div class=\"row mt-4\">\n    <div class=\"col-3 m-2\">\n        <div class=\"card\" style=\"width: 18rem; height: 24rem\">\n            <img src=\"../../../assets/imagenes/particion_equivalencia_caratula.jfif\" class=\"card-img-top\" alt=\"Partición de equivalencia card\">\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">Partición de equivalencia</h3>\n              <p class=\"card-text\">La división en particiones de equivalencia, también llamadas clases de equivalencia, es una técnica de pruebas de caja negra en la que las entradas del programa se ...</p>\n              <a (click)=\"redirigirTecnica('part_equiv')\" class=\"btn btn-primary\">Ver Tecnica</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-3 m-2\">\n        <div class=\"card\" style=\"width: 18rem; height: 24rem\">\n          <img src=\"../../../assets/imagenes/valores_limites_caratula.jfif\" class=\"card-img-top\" alt=\"Análisis de valores límites card\">\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">Análisis de valores límites</h3>\n              <p class=\"card-text\">La técnica de análisis de los valores límite se basa en el hecho heurístico de que los errores tienden a producirse con más probabilidad en los valores extremos de los posibles ...</p>\n              <a (click)=\"redirigirTecnica('analisis_val_lim')\" class=\"btn btn-primary\">Ver Tecnica</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-3 m-2\">\n        <div class=\"card\" style=\"width: 18rem; height: 24rem\">\n          <img src=\"../../../assets/imagenes/transicion_estado_caratula.jfif\" class=\"card-img-top\" alt=\"Transición de estados card\">\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">Transición de estados</h3>\n              <p class=\"card-text\">La técnica de transición de estados es una técnica de prueba dinámica, que se utiliza cuando el sistema se define en términos de un número finito de ...</p>\n              <a (click)=\"redirigirTecnica('trans_est')\" class=\"btn btn-primary\">Ver Tecnica</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-3 m-2\">\n        <div class=\"card\" style=\"width: 18rem; height: 24rem\">\n          <img src=\"../../../assets/imagenes/tabla_decisiones_caratula.jfif\" class=\"card-img-top\" alt=\"Tabla de decisión card\">\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">Tabla de decisión</h3>\n              <p class=\"card-text\">La tabla de decisión es una herramienta que sintetiza procesos en los\n                cuales se dan un conjunto de condiciones y un conjunto de ...</p>\n              <a (click)=\"redirigirTecnica('tabla_dec')\" class=\"btn btn-primary\">Ver Tecnica</a>\n            </div>\n        </div>\n    </div>\n    <!--<div class=\"col-3 m-2\">\n        <div class=\"card\" style=\"width: 18rem; height: 24rem\">\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">Casos de uso</h3>\n              <p class=\"card-text\"> Pruebas de caso de uso es la técnica de diseño de prueba de caja negra en la que los casos de prueba están diseñados para ...</p>\n              <a (click)=\"redirigirTecnica('casos_uso')\" class=\"btn btn-primary\">Ver Tecnica</a>\n            </div>\n        </div>\n    </div>-->\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-valores-limites',\n  templateUrl: './valores-limites.component.html',\n  styleUrls: ['./valores-limites.component.sass']\n})\nexport class ValoresLimitesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Valores limites</h2>\n<div class=\"mt-2\">\n    <p class=\"mt-2\">La técnica de análisis de los valores límite se basa en el hecho heurístico de que los errores\n        tienden a producirse con más probabilidad en los valores extremos de los posibles valores de entrada.</p>\n\n    <p class=\"mt-2\">Esta técnica, que puede considerarse una expansión de la idea de partición de equivalencia, se puede\n        usar siempre que la entrada a analizar tenga definidos esos límites en la especificación de los requerimientos.\n        En realidad no es que se pueda, sino que se debe usar en tales casos.</p>\n\n    <p class=\"mt-2\">Los valores elegidos para los casos de prueba son justo aquellos que están por encima o por debajo\n        de los márgenes de las clases de equivalencia.</p>\n\n    <div class=\"alert alert-danger\" role=\"alert\">\n        Los valores límite no solo se exploran en los datos de entrada, sino que también pueden estudiar las condiciones\n        de salida.\n    </div>\n\n    <h2>Aplicación del análisis de valores límite</h2>\n\n    <p class=\"mt-2\">Si una condición para un dato de entrada i especifica un rango de valores definido como n <= i <=m,\n            los casos de prueba resultantes de aplicar el análisis de valores límite corresponden a n-1, n, n+1, m-1, m\n            y m+1.</p>\n\n    <p class=\"mt-2\">Por ejemplo, si el dato de entrada corresponde a un número que nos indica el día de la\n                semana en el que estamos, deberíamos definir el rango de valores válidos como: 1 <= día <=7. En ese\n                    caso, los casos de prueba resultantes a aplicar serían 0, 1, 2, 6, 7 y 8.</p>\n\n    <img src=\"../../../assets/imagenes/valores_limites_1.png\" alt=\"graficos\">'\n\n    <div class=\"d-flex justify-content-end pb-4\">\n        <button type=\"button\" class=\"btn btn-primary w-30\" [routerLink]=\"['/particion-equivalente']\"  routerLinkActive=\"router-link-active\" [queryParams]=\"{target: 'valoresLimites'}\" >Ver ejemplo</button>\n    </div>\n</div>","import {IPersonaPres} from 'src/app/shared/interfaces/IPersonaPres';\r\nexport const PersonasPrestamos: IPersonaPres[] = [\r\n    {\r\n        id: 1,\r\n        nombre: 'Maxi Raya Gracia',\r\n        deuda: true\r\n    },\r\n    {\r\n        id: 2,\r\n        nombre: 'Miguel Ángel Lobato-Vizcaíno',\r\n        deuda: false\r\n    },\r\n    {\r\n        id: 3,\r\n        nombre: 'Abel Figueras Alcalde',\r\n        deuda: true\r\n    },\r\n    {\r\n        id: 4,\r\n        nombre: 'Rubén Emiliano Carballo Bernad',\r\n        deuda: false\r\n    },\r\n    {\r\n        id: 5,\r\n        nombre: 'Esmeralda Ballester-Sainz',\r\n        deuda: true\r\n    },\r\n    {\r\n        id: 6,\r\n        nombre: 'Jose Francisco Noguera Baró',\r\n        deuda: false\r\n    },\r\n    {\r\n        id: 7,\r\n        nombre: 'Ricardo Castellanos Llorens',\r\n        deuda: false\r\n    },\r\n    {\r\n        id: 8,\r\n        nombre: 'Maxi Amaya Bermudez',\r\n        deuda: true\r\n    }\r\n]","<h2>Particiones de equivalencia</h2>\n<div class=\"mt-2\">\n    <p>La división en particiones de equivalencia,\n        también llamadas clases de equivalencia, es una técnica de pruebas\n        de caja negra en la que las entradas del programa se clasifican en clases.\n        Considera como perteneciente al dominio de entrada a todas las entradas que\n        puedan tener efecto en la salida de la prueba, positivo o negativo.\n    </p>\n    <div class=\"alert alert-danger\" role=\"alert\">\n        Todos los miembros de cada clase de equivalencia comparten ciertas características en común que no son\n        compartidas con miembros de otras clases.\n    </div>\n\n    <img src=\"../../../assets/imagenes/particion_equivalencia_1.png\" alt=\"graficos\">\n    <p class=\"mt-2\">Cada clase se llama partición de equivalencia porque todos elementos en la clase prueban la misma\n        cosa. Si uno de los elementos de una clase provoca un error,\n        todos los de esa clase probablemente lo harán. La idea principal de esta técnica es <strong>identificar los\n            casos de prueba usando un elemento de cada clase de equivalencia. Ej:</strong> </p>\n    <p class=\"mt-2\">Se dispone de un módulo de software con los siguientes datos de entrada:</p>\n    <h2 class=\"m-auto\">Formulario banco</h2>\n    <div class=\"formulario-part-equiv d-flex flex-column w-50 m-auto\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Código de área</mat-label>\n            <input matInput [(ngModel)]=\"ordenR.codArea\" placeholder=\"345\" required>\n            <!--<mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>-->\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Clave identificativa operacion</mat-label>\n            <input matInput [(ngModel)]=\"ordenR.claveOperacion\" placeholder=\"Comida\" required>\n            <!--<mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>-->\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Órdenes posibles</mat-label>\n            <input matInput [(ngModel)]=\"ordenR.ordPosibles\" placeholder=\"factura\" required>\n            <!--<mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error> [formControl]=\"email\"-->\n        </mat-form-field>\n        <div class=\"d-flex w-100 flex-row justify-content-end\">\n            <button (click)=\"guardarOrdenRealizada()\" mat-raised-button color=\"accent\">Realizar Orden</button>\n        </div>\n        <div class=\"mt-4\" *ngIf=\"guardadoPresionado\">\n            <div *ngIf=\"!errorGuardado\" class=\"alert alert-success\" role=\"alert\">\n                Orden realizada exitosamente\n            </div>\n            <div *ngIf=\"errorGuardado\" class=\"alert alert-danger\" role=\"alert\">\n                No se pudo realizar la orden revise lo datos de entrada\n            </div>\n        </div>\n        \n    </div>\n\n    <h2 class=\"m-auto\">Identificacion y etiquetado de las clase de equivalencia</h2>\n    <div class=\"m-4 pb-4\">\n        <table class=\"table table-danger table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Entrada</th>\n                    <th scope=\"col\">Condición</th>\n                    <th scope=\"col\">Salidas válidas</th>\n                    <th scope=\"col\">Salidas inválidas</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Código de área</td>\n                    <td>Cóndición booleana (¿Es un número?) + rango de valores (200...999)</td>\n                    <td>\n                        <ul>\n                            <li>\n                    <td><strong style=\"color: blue;\">1.</strong> 200<=código<=999 </td>\n                            </li>\n                            </ul>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">2.</strong> código < 200</li>\n                            <li><strong style=\"color: blue;\">3.</strong> código > 999</li>\n                            <li><strong style=\"color: blue;\">4.</strong> no es un número</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Clave identificativa operacion</td>\n                    <td>Conjunto finitio de valores (¿Son 6 caracteres?)</td>\n                    <td>\n                        <ul>\n                            <li>\n                                <strong style=\"color: blue;\">5.</strong> 6 caracteres exactos, ni más ni menos\n                            </li>\n                        </ul>\n                    </td>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">6.</strong> menos de 6 caracteres</li>\n                            <li><strong style=\"color: blue;\">7.</strong> más de 6 caracteres</li>\n                        </ul>\n\n                    </td>\n                </tr>\n                <tr>\n                    <td>Documento</td>\n                    <td>Conjunto de valores admitidos (¿Documento válido?)</td>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">8.</strong> \"cheque\"</li>\n                            <li><strong style=\"color: blue;\">9.</strong> \"depósito\"</li>\n                            <li><strong style=\"color: blue;\">10.</strong> \"factura\"</li>\n                            <li><strong style=\"color: blue;\">11.</strong> \"retirada de fondos\"</li>\n                        </ul>\n                    </td>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">12.</strong> no es órden válida</li>\n                        </ul>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <h2 class=\"m-auto\">Diseño de casos de prueba para cubrir tantas clases de equivalencia validas\n        posibles(1,5,8,9,10,11)</h2>\n    <div class=\"m-4 pb-4\">\n        <table class=\"table table-danger table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Código de área</th>\n                    <th scope=\"col\">Clave identificativa</th>\n                    <th scope=\"col\">Documento</th>\n                    <th scope=\"col\">Clases válidas cubiertas</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>300</td>\n                    <td>Nómina</td>\n                    <td>\"cheque\"</td>\n                    <td><strong style=\"color: blue;\">1</strong>, <strong style=\"color: blue;\">5</strong>, <strong\n                            style=\"color: blue;\">8</strong></td>\n                </tr>\n                <tr>\n                    <td>400</td>\n                    <td>Viajes</td>\n                    <td>\"depósito\"</td>\n                    <td>1, 5, <strong style=\"color: blue;\">9</strong></td>\n                </tr>\n                <tr>\n                    <td>500</td>\n                    <td>Coches</td>\n                    <td>\"factura\"</td>\n                    <td>1, 5, <strong style=\"color: blue;\">10</strong></td>\n                </tr>\n                <tr>\n                    <td>600</td>\n                    <td>Comida</td>\n                    <td>\"retirada de fondos\"</td>\n                    <td>1, 5, <strong style=\"color: blue;\">11</strong></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <h2 class=\"m-auto\">Diseño de casos de prueba para cubrir una sola clase de equivalencia invalida cada vez(2,3,4,6,7\n        y 12)</h2>\n    <div class=\"m-4 pb-4\">\n        <table class=\"table table-danger table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Código de área</th>\n                    <th scope=\"col\">Clave identificativa</th>\n                    <th scope=\"col\">Documento</th>\n                    <th scope=\"col\">Clases válidas cubiertas</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>150</td>\n                    <td>Viajes</td>\n                    <td>\"factura\"</td>\n                    <td> <strong style=\"color: blue;\">2</strong>, 5, 10</td>\n                </tr>\n                <tr>\n                    <td>1100</td>\n                    <td>Coches</td>\n                    <td>\"depósito\"</td>\n                    <td><strong style=\"color: blue;\">3</strong>, 5, 9</td>\n                </tr>\n                <tr>\n                    <td>#Ab20</td>\n                    <td>Comida</td>\n                    <td>\"retirada de fondos\"</td>\n                    <td><strong style=\"color: blue;\">4</strong>, 5, 11</td>\n                </tr>\n                <tr>\n                    <td>220</td>\n                    <td>Luz</td>\n                    <td>\"depósito\"</td>\n                    <td>1, <strong style=\"color: blue;\">6</strong>, 9</td>\n                </tr>\n                <tr>\n                    <td>400</td>\n                    <td>Teléfono</td>\n                    <td>\"cheque\"</td>\n                    <td>1, <strong style=\"color: blue;\">7</strong>, 8</td>\n                </tr>\n                <tr>\n                    <td>500</td>\n                    <td>Viajes</td>\n                    <td>\"pagos varios&&\"</td>\n                    <td>1, 5, <strong style=\"color: blue;\">12</strong></td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n    <div class=\"d-flex flex-row justify-content-end text-muted\">\n        <p>El caso que esta fallando es la clave operacion menor a 6</p>\n    </div>\n\n    <h2 id=\"valoresLimites\" class=\"m-auto\">Diseño de casos de prueba para trabajar con los valores limites</h2>\n    <div class=\"m-4 pb-4\">\n        <table class=\"table table-danger table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Entrada</th>\n                    <th scope=\"col\">Condición</th>\n                    <th scope=\"col\">Salidas válidas</th>\n                    <th scope=\"col\">Salidas inválidas</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Código de área</td>\n                    <td>Cóndición booleana (¿Es un número?) + rango de valores (200...999)</td>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">13.</strong> código = 200 </li>\n                            <li><strong style=\"color: blue;\">14.</strong> código = 201</li>\n                            <li><strong style=\"color: blue;\">15.</strong> código = 998</li>\n                            <li><strong style=\"color: blue;\">16.</strong> código = 999</li>\n                        </ul>\n                    </td>\n\t\t\t\t\t<td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">17.</strong> código = 199 </li>\n                            <li><strong style=\"color: blue;\">18.</strong> código = 1000</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Clave identificativa operacion</td>\n                    <td>Conjunto finitio de valores (¿Son 6 caracteres?)</td>\n                    <td>No hay cambios</td>\n                    <td>\n                        <ul>\n                            <li><strong style=\"color: blue;\">19.</strong> 5 caracteres </li>\n                            <li><strong style=\"color: blue;\">20.</strong> 7 caracteres</li>\n                        </ul>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Documento</td>\n                    <td>Conjunto de valores admitidos (¿Documento válido?)</td>\n                    <td>No hay cambios</td>\n                    <td>No hay cambios</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n\n</div>","import { ViewportScroller } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IOrdRealizada } from 'src/app/shared/interfaces/IOrdRealizada';\n\n@Component({\n  selector: 'app-particion-equivalente',\n  templateUrl: './particion-equivalente.component.html',\n  styleUrls: ['./particion-equivalente.component.sass']\n})\nexport class ParticionEquivalenteComponent implements OnInit {\n\n  ordenR: IOrdRealizada;\n  errorGuardado = false;\n  guardadoPresionado = false;\n  constructor(private aRoute: ActivatedRoute,private scroller: ViewportScroller) {\n    this.ordenR = {\n      claveOperacion: '',\n      codArea: '',\n      ordPosibles: ''\n    }\n   }\n\n  ngOnInit(): void {\n    this.aRoute.queryParams.subscribe(x => {\n      if(x){\n        this.scroller.scrollToAnchor(x.target)\n      }\n    })\n  }\n\n  guardarOrdenRealizada(){\n    console.log(this.ordenR)\n    this.errorGuardado = false;\n    var codAreaNumb = +this.ordenR.codArea;\n    this.guardadoPresionado = true;\n    if(codAreaNumb){\n      if(codAreaNumb <=200 || codAreaNumb >=999){\n        this.errorGuardado = true;\n      }\n    }\n    \n    if(this.ordenR.claveOperacion.length < 6){\n      this.errorGuardado = true;\n    }\n    if(this.validarOperacion(this.ordenR.ordPosibles)){\n      this.errorGuardado = true;\n    }\n    setTimeout(() => {\n      this.guardadoPresionado = false;\n    }, 5000);\n  }\n\n  validarOperacion(operacion: string){\n    switch (operacion) {\n      case 'cheque': case'deposito': case 'pago factura': case 'retirada de fondos':\n        return false;\n      break;\n    \n      default:\n        return true;\n      break;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport * as data_personas from 'src/app/shared/data/prestamosPersonas';\nimport { IPersonaPres } from 'src/app/shared/interfaces/IPersonaPres';\n@Component({\n  selector: 'app-tabla-decision',\n  templateUrl: './tabla-decision.component.html',\n  styleUrls: ['./tabla-decision.component.sass']\n})\nexport class TablaDecisionComponent implements OnInit {\n\n  myControl = new FormControl();\n  options: IPersonaPres[] = data_personas.PersonasPrestamos;\n  filteredOptions: Observable<IPersonaPres[]>;\n  personaSeleccionada!: IPersonaPres;\n  opcionSeleccionada = false;\n  tipoPersonaSeleccionada = 0;\n  constructor(private _snackBar: MatSnackBar) {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this._filter(name) : this.options.slice())\n      );\n    this.inicializarVariables();\n  }\n\n  inicializarVariables() {\n    this.personaSeleccionada = {\n      id: 0,\n      nombre: '',\n      deuda: false\n    };\n    this.tipoPersonaSeleccionada = 0;\n    this.opcionSeleccionada = false;\n    this.myControl.reset();\n  }\n\n\n  openSnackBar(mensaje: string) {\n    this._snackBar.open(mensaje, 'OK', {\n      duration: 5000\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  displayFn(user: IPersonaPres): string {\n    return user && user.nombre ? user.nombre : '';\n  }\n\n  private _filter(name: string): IPersonaPres[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter((option: IPersonaPres) => option.nombre.toLowerCase().includes(filterValue));\n  }\n\n  getPersonaSeleccionada(personaSeleccionada: IPersonaPres) {\n    this.opcionSeleccionada = true;\n    this.personaSeleccionada = personaSeleccionada;\n  }\n\n  validarPrestamoBanco() {\n    if (this.personaSeleccionada.deuda) {\n      switch (this.tipoPersonaSeleccionada) {\n        case 1:\n          this.openSnackBar(`${this.personaSeleccionada.nombre} NO puede recibir el prestamo`);\n          this.inicializarVariables();\n          break;\n        case 2:\n          this.openSnackBar(`${this.personaSeleccionada.nombre} SI puede recibir el prestamo`);\n          this.inicializarVariables();\n          break;\n        case 3:\n          //this.openSnackBar(`${this.personaSeleccionada.nombre} no puede recibir el prestamo`); correcto\n          this.openSnackBar(`${this.personaSeleccionada.nombre} SI puede recibir el prestamo ->(bug)`);\n          this.inicializarVariables();\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (this.tipoPersonaSeleccionada) {\n        case 1:\n          this.openSnackBar(`${this.personaSeleccionada.nombre} NO puede recibir el prestamo`);\n          this.inicializarVariables();\n          break;\n        case 2:\n          this.openSnackBar(`${this.personaSeleccionada.nombre} SI puede recibir el prestamo`);\n          this.inicializarVariables();\n          break;\n        case 3:\n          this.openSnackBar(`${this.personaSeleccionada.nombre} SI puede recibir el prestamo`);\n          this.inicializarVariables();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n","<h2> Tabla de decision </h2>\n<div class=\"mt-2\">\n    <p class=\"mt-2\">\n        La tabla de decisión es una herramienta que sintetiza procesos en los\n        cuales se dan un conjunto de condiciones y un conjunto de acciones a tomar\n        según el valor que toman las condiciones. Puede utilizarse como herramienta en\n        los distintos momentos del proyecto, esto es: en la exposición de los hechos, en\n        el análisis del sistema actual, en el diseño del nuevo sistema y en el desarrollo\n        del software.\n    </p>\n    <p class=\"mt-2\">\n        Las tablas de decisión se emplean desde mediados de 1950, cuando fueron\n        desarrolladas por la General Electric para el análisis de funciones de la empresa\n        como control de inventarios, análisis de ventas, análisis de créditos y control de\n        transporte y rutas.\n    </p>\n    <h3 class=\"mt-2\">Estructura de una tabla de decisiones</h3>\n    <p class=\"mt-2\">\n        La tabla de decisión está integrada por: matriz de condiciones, matriz de\n        acciones y matriz de reglas para condiciones y acciones. En la matriz de\n        condiciones se enumeran todas las situaciones que pueden presentarse. Las\n        reglas de condiciones indican qué valor debe asociarse a cada una de las\n        condiciones. En la matriz de acciones se enlistan el conjunto de todos los pasos\n        que se deben seguir cuando se presentan ciertas condiciones. Las reglas de\n        acciones muestran las acciones específicas del conjunto que deben emprenderse\n        dados los valores que toman las condiciones.\n    </p>\n    <h3 class=\"mt-2\"> Ejemplo</h3>\n    <p class=\"mt-2\">\n        Tenemos un software que se encarga de validar si una persona puede o no recibir un prestamos, las condiciones\n        que debe tener en cuenta al validar si corresponse prestamos o no son las siguiente:\n    </p>\n    <ul>\n        <li>Si la persona que solicita el prestamo es un Estudiante no sera Aprobado el prestamo aunque este no tenga\n            deudas sin pagar.</li>\n        <li>Si la persona que solicita el prestamo es un Empleado/Trabajador el prestamo sera Aprobado aunque este si\n            tenga deudas sin pagar.</li>\n        <li>Si la persona que solicita el prestamo es un Retirado el prestamo sera Aprobado si este no presenta deudas\n            en caso de si tener deudas el prestamos no se aprobara.</li>\n    </ul>\n\n    <p class=\"mt-2\">Creamos la tabla decisiones correspondiente al caso planteado y a partir de ese se crean los casos\n        de prueba</p>\n    <img style=\"max-width: 100%;\" src=\"../../../assets/imagenes/tabla_decisiones_e1.png\" alt=\"tabla de decisiones\">\n\n    <h3 class=\"mt-2\">Formulario prestamos banco</h3>\n    <div class=\"formulario p-4 d-flex justify-content-space-between m-auto flex-column\">\n        <div *ngIf=\"opcionSeleccionada\" class=\"d-flex flex-row justify-content-end\">\n\n            <div *ngIf=\"!this.personaSeleccionada.deuda\" class=\"alert alert-success\" role=\"alert\">\n                {{this.personaSeleccionada.nombre}} no posee deudas\n            </div>\n            <div *ngIf=\"this.personaSeleccionada.deuda\" class=\"alert alert-danger\" role=\"alert\">\n                {{this.personaSeleccionada.nombre}} posee deudas\n            </div>\n        </div>\n        <mat-form-field class=\"w-50\" appearance=\"fill\">\n            <mat-label>Nombre persona</mat-label>\n            <input type=\"text\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\"\n                (optionSelected)=\"getPersonaSeleccionada($event.option.value     )\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option.nombre}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <mat-radio-group [(ngModel)]=\"this.tipoPersonaSeleccionada\" class=\"example-radio-group\" aria-label=\"Selecciona un tipo de solicitante:\">\n            <mat-radio-button [value]=\"1\">Estudiante</mat-radio-button>\n            <mat-radio-button [value]=\"2\">Trabajador</mat-radio-button>\n            <mat-radio-button [value]=\"3\">Retirado</mat-radio-button>\n        </mat-radio-group>\n        <div class=\"d-flex justify-content-end\">\n            <button (click)=\"validarPrestamoBanco()\" [disabled]=\"this.personaSeleccionada.id == 0 && this.tipoPersonaSeleccionada == 0\" mat-flat-button color=\"accent\">Validar prestamo</button>\n        </div>\n    </div>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'tecnicasTesting';\n}\n","<div class=\"w-100 h-100\">\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <a href=\"\" style=\"color: white;\" [routerLink]=\"['/home']\"  >Tecnicas de Testing</a>\n    </mat-toolbar-row>\n  </mat-toolbar>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","import { IEstadoAccion } from \"../interfaces/IEstadoAccion\";\r\nimport { IRutaAcr } from \"../interfaces/IRutaAcr\";\r\n\r\nexport const rutas_tecnicas_acr: IRutaAcr[] = [\r\n    {\r\n        ruta: 'particion-equivalente',\r\n        acr: 'part_equiv'\r\n    },\r\n    {\r\n        ruta: 'valores-limites',\r\n        acr: 'analisis_val_lim'\r\n    },\r\n    {\r\n        ruta: 'transicion-estados',\r\n        acr: 'trans_est'\r\n    },\r\n    {\r\n        ruta: 'tabla-decision',\r\n        acr: 'tabla_dec'\r\n    },\r\n    {\r\n        ruta: 'casos-uso',\r\n        acr: 'casos_uso'\r\n    }\r\n]\r\n\r\nexport const acciones_desenchufado: IEstadoAccion[] = [\r\n    {\r\n        accion: 'enchufar',\r\n        estado: 'enchufado',\r\n        color: 'success'\r\n    }\r\n]\r\nexport const acciones_enchufado: IEstadoAccion[] = [\r\n    {\r\n        accion: 'desenchufar',\r\n        estado: 'desenchufado',\r\n        color: 'danger'\r\n    },\r\n    {\r\n        accion: 'prender',\r\n        estado: 'prendido',\r\n        color: 'primary'\r\n    }\r\n]\r\nexport const acciones_prendido: IEstadoAccion[] = [\r\n    {\r\n        accion: 'desenchufar',\r\n        estado: 'desenchufado',\r\n        color: 'danger'\r\n    }, {\r\n        accion: 'apagar',\r\n        estado: 'apagado',\r\n        color: 'warning'\r\n    },\r\n]\r\nexport const acciones_apagado: IEstadoAccion[] = [\r\n    {\r\n        accion: 'desenchufar',\r\n        estado: 'desenchufado',\r\n        color: 'danger'\r\n    },\r\n    {\r\n        accion: 'prender',\r\n        estado: 'prendido',\r\n        color: 'primary'\r\n    }\r\n]\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatRadioModule} from '@angular/material/radio';\n\n\n\nimport { HomeComponent } from './components/home/home.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ParticionEquivalenteComponent } from './components/particion-equivalente/particion-equivalente.component';\nimport { ValoresLimitesComponent } from './components/valores-limites/valores-limites.component';\nimport { TransicionEstadosComponent } from './components/transicion-estados/transicion-estados.component';\nimport { TablaDecisionComponent } from './components/tabla-decision/tabla-decision.component';\nimport { CasosUsoComponent } from './components/casos-uso/casos-uso.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ParticionEquivalenteComponent,\n    ValoresLimitesComponent,\n    TransicionEstadosComponent,\n    TablaDecisionComponent,\n    CasosUsoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    NgbModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatAutocompleteModule,\n    MatRadioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { IEstadoAccion } from 'src/app/shared/interfaces/IEstadoAccion';\nimport * as constantes from 'src/app/shared/constantes/constantes'\n\n@Component({\n  selector: 'app-transicion-estados',\n  templateUrl: './transicion-estados.component.html',\n  styleUrls: ['./transicion-estados.component.sass']\n})\nexport class TransicionEstadosComponent implements OnInit {\n\n  estadoTelevisor: IEstadoAccion;\n  constructor(private _snackBar: MatSnackBar) {\n    this.estadoTelevisor = {\n      accion: 'desenchufar',\n      estado: 'desenchufado',\n      color: 'danger'\n    };\n  }\n\n  ngOnInit(): void {\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, { duration: 2000 });\n  }\n\n  actualizarEstado(accion: string) {\n\n    var acciones = this.obtenerAcciones();\n    if(acciones.length > 0){\n      var nuevoEstado = acciones.find(x => x.accion == accion)\n      if(nuevoEstado){\n        this.estadoTelevisor = nuevoEstado;\n        this.openSnackBar(`El televisor esta ${this.estadoTelevisor.estado}` ,'OK')\n      }else{\n        this.openSnackBar(`El televisor no se puede ${accion} esta ${this.estadoTelevisor.estado}`,'OK')\n      }\n    }else{\n      this.openSnackBar('Error al obtener las acciones','OK')\n    }\n\n  }\n\n  obtenerAcciones(){\n    \n    switch (this.estadoTelevisor.estado) {\n      case 'apagado':\n        return constantes.acciones_apagado;\n      break;\n      case 'prendido':\n        return constantes.acciones_prendido;\n      break;\n      case 'enchufado':\n        return constantes.acciones_enchufado;\n      break;\n      case 'desenchufado':\n        return constantes.acciones_desenchufado;\n      break;\n    \n      default:\n        return [];\n        break;\n    }\n  }\n}\n","<h2> Transicion de estados </h2>\n<div class=\"mt-2\">\n    <p class=\"mt-2\">La técnica de transición de estados es una técnica de prueba dinámica, que se utiliza cuando el\n        sistema se define en términos de un número finito de estados y las transiciones entre los estados se rigen por\n        las reglas del sistema.</p>\n    <p class=\"mt-2\">O, en otras palabras, esta técnica se utiliza cuando las características de un sistema se\n        representan como estados que se transforman entre sí. Las transformaciones están determinadas por las reglas del\n        software. La representación pictórica se puede mostrar como:</p>\n    <img src=\"../../../assets/imagenes/transicion_estado_2.png\" alt=\"graficos\">'\n    <p class=\"mt-2\">Entonces aquí vemos que una entidad transiciones del Estado 1 al Estado 2 debido a algunos aporte\n        condición, que conduce a una evento y resulta en acción y finalmente da el producción .</p>\n    <h3>Ejemplo</h3>\n    <p class=\"mt-2\">Tenemos un televisor el cual posee 4 estados (Enchufado,Desenchufado,Apagado y prendido) estos estados\n        tienen un orden logico el cual deben respetar Ej: No puedo prender el televisor si esta desenchufado\n    </p>\n\n    <h3>Estado Televisor: <span [ngClass]=\"{'text-primary': estadoTelevisor.color == 'primary','text-success': estadoTelevisor.color == 'success','text-danger': estadoTelevisor.color == 'danger','text-warning': estadoTelevisor.color == 'warning'}\">{{estadoTelevisor.estado}}</span> </h3>\n    <div class=\"row pb-4\">\n        <div class=\"col\">\n            <div class=\"d-flex flex-column\">\n                <button type=\"button\" (click)=\"actualizarEstado('enchufar')\" class=\"btn btn-success btn-block\">Enchufar tv </button>\n                <button type=\"button\" (click)=\"actualizarEstado('desenchufar')\" class=\"btn btn-danger btn-block\">Desenchufar tv </button>\n            </div>\n        </div>\n        <div class=\"col\">\n            <div class=\"d-flex flex-column\">\n                <button type=\"button\" (click)=\"actualizarEstado('prender')\" class=\"btn btn-primary btn-block\">Prender tv </button>\n                <button type=\"button\" (click)=\"actualizarEstado('apagar')\" class=\"btn btn-warning btn-block\">Apagar tv </button>\n            </div>\n        </div>\n    </div>\n    <h2>Diagrama de estado y casos de prueba</h2>\n    <img src=\"../../../assets/imagenes/transicion_estado_1.png\" alt=\"graficos\">'\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-casos-uso',\n  templateUrl: './casos-uso.component.html',\n  styleUrls: ['./casos-uso.component.sass']\n})\nexport class CasosUsoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>casos-uso works!</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CasosUsoComponent } from './components/casos-uso/casos-uso.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ParticionEquivalenteComponent } from './components/particion-equivalente/particion-equivalente.component';\nimport { TablaDecisionComponent } from './components/tabla-decision/tabla-decision.component';\nimport { TransicionEstadosComponent } from './components/transicion-estados/transicion-estados.component';\nimport { ValoresLimitesComponent } from './components/valores-limites/valores-limites.component';\n\nconst routes: Routes = [\n  {path:'home', component: HomeComponent},\n  {path:'particion-equivalente', component: ParticionEquivalenteComponent},\n  {path:'valores-limites', component: ValoresLimitesComponent},\n  {path:'transicion-estados', component: TransicionEstadosComponent},\n  {path:'tabla-decision', component: TablaDecisionComponent},\n  {path:'casos-uso', component: CasosUsoComponent},\n  {path:'', redirectTo:'/home', pathMatch:'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}